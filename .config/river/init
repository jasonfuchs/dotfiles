#!/bin/sh

term='foot'
menu='fuzzel'

alias nmap='riverctl map normal'
alias ptrnmap='riverctl map-pointer normal'

nmap Super T spawn "$term"
nmap Super R spawn "$menu"
nmap Super C close
nmap Super+Shift C exit
nmap Super J focus-view next
nmap Super K focus-view previous
nmap Super+Shift J swap next
nmap Super+Shift K swap previous
nmap Super Period focus-output next
nmap Super Comma focus-output previous
nmap Super+Shift Period send-to-output next
nmap Super+Shift Comma send-to-output previous
nmap Super Return zoom
nmap Super Space toggle-float
nmap Super F toggle-fullscreen
nmap Super+Alt H move left 100
nmap Super+Alt J move down 100
nmap Super+Alt K move up 100
nmap Super+Alt L move right 100
nmap Super+Alt+Control H snap left
nmap Super+Alt+Control J snap down
nmap Super+Alt+Control K snap up
nmap Super+Alt+Control L snap right
nmap Super+Alt+Shift H resize horizontal -100
nmap Super+Alt+Shift J resize vertical 100
nmap Super+Alt+Shift K resize vertical -100
nmap Super+Alt+Shift L resize horizontal 100
ptrnmap Super BTN_LEFT move-view
ptrnmap Super BTN_RIGHT resize-view
ptrnmap Super BTN_MIDDLE toggle-float

for i in `seq 1 9`; do
    tags=$((1 << ($i - 1)))

    nmap Super $i set-focused-tags $tags
    nmap Super+Shift $i set-view-tags $tags
    nmap Super+Control $i toggle-focused-tags $tags
    nmap Super+Shift+Control $i toggle-view-tags $tags
done

all_tags=$(((1 << 32) - 1))
nmap Super 0 set-focused-tags $all_tags
nmap Super+Shift 0 set-view-tags $all_tags

# Super+{Up,Right,Down,Left} to change layout orientation
riverctl map normal Super Up    send-layout-cmd rivertile "main-location top"
riverctl map normal Super Right send-layout-cmd rivertile "main-location right"
riverctl map normal Super Down  send-layout-cmd rivertile "main-location bottom"
riverctl map normal Super Left  send-layout-cmd rivertile "main-location left"

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pamixer -i 5'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'pamixer -d 5'
    riverctl map $mode None XF86AudioMute         spawn 'pamixer --toggle-mute'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Control screen backlight brightness with brightnessctl (https://github.com/Hummer12007/brightnessctl)
    riverctl map $mode None XF86MonBrightnessUp   spawn 'brightnessctl set +5%'
    riverctl map $mode None XF86MonBrightnessDown spawn 'brightnessctl set 5%-'
done

# Set background and border color
riverctl background-color 0x002b36
riverctl border-color-focused 0x93a1a1
riverctl border-color-unfocused 0x586e75

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make all views with an app-id that starts with "float" and title "foo" start floating.
riverctl rule-add -app-id 'float*' -title 'foo' float

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add -app-id "bar" csd

# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
rivertile -view-padding 6 -outer-padding 6 &
